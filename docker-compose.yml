services:
  traefik:
    image: traefik:v2.2
    command:
      - "--api.insecure=true"
      - "--api.dashboard=false"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "${EXTERNAL_PORT}:80"
    networks:
      - yar-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  database:
    image: mariadb
    restart: always
    env_file:
      - .env
    networks:
      - yar-network
    volumes:
      - db_data:/var/lib/mysql

  backend:
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile
    env_file:
      - .env
    depends_on:
      - database
    networks:
      - yar-network
    volumes:
      - ./apps/backend/data:/app/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.routers.backend.middlewares=strip-api-prefix"
      - "traefik.http.middlewares.strip-api-prefix.stripprefix.prefixes=/api"
      - "traefik.http.services.backend.loadbalancer.server.port=3000"

  web:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    env_file:
      - .env
    depends_on:
      - backend
    networks:
      - yar-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=PathPrefix(`/`)"
      - "traefik.http.routers.web.entrypoints=web"
      - "traefik.http.services.web.loadbalancer.server.port=3000"

volumes:
  db_data:


networks:
  yar-network:
